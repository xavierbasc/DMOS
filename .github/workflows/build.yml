name: Build on Tag

on:
  push:
    tags:
      - '*'  # only tags

jobs:
  build-macos:
    name: Build macOS Binary
    runs-on: macos-latest

    steps:
      # clone repo
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone SDL2
        run: git clone --depth=1 --branch release-2.30.9 https://github.com/libsdl-org/SDL.git external/SDL2

      # Xcode 16.1
      - name: Set Xcode version to 16.1
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer

      # Xcode compilation
      - name: Build binary
        run: |
          xcodebuild -project macos/dm50.xcodeproj \
                    -scheme macOS \
                    -destination 'platform=macOS,arch=x86_64' \
                    -configuration Release \
                    -derivedDataPath ./build/macos \
                    build
          mkdir -p artifacts
          cp build/macos/Build/Products/Release/DM50 artifacts/dm50

      # Compress binary
      - name: Compress binary
        run: |
          cd artifacts
          zip dm50-macos.zip dm50

      # Subir el binario comprimido como un artefacto del release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/dm50-macos.zip
          asset_name: dm50-macos.zip
          asset_content_type: application/zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install SDL2
        run: sudo apt-get update && sudo apt-get install -y libsdl2-dev

      - name: Build for Linux
        run: make PLATFORM=linux

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: build/bin/*

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Install SDL2
        run: choco install sdl2
        
      - name: Build for Windows
        run: make PLATFORM=windows
        
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-binary
          path: build/bin/*.exe
